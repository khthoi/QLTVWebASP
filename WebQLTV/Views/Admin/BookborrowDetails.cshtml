@model PagedList.IPagedList<WebQLTV.Models.BookBorrowViewModel>
@using PagedList.Mvc;
@using PagedList;

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<h2 class="mt-4" style="margin-left: 20px; font-weight: 600; color: #333;">Danh Sách Mượn Sách</h2>

<div class="container mt-5">
    <!-- Thêm form tìm kiếm -->
    <div class="row mb-4">
        <div class="col-md-6 col-lg-4">
            <form method="get" action="BookBorrowDetails" class="input-group">
                <input type="text" name="searchUsername" class="form-control"
                       placeholder="Tìm kiếm theo tên người dùng..."
                       value="@ViewBag.SearchUsername"
                       style="border-radius: 20px 0 0 20px;">
                <button type="submit" class="btn btn-primary"
                        style="border-radius: 0 20px 20px 0;">
                    <i class="bi bi-search me-2"></i>Tìm
                </button>
            </form>
        </div>
    </div>

    @if (TempData["BookApproveMessage"] != null)
    {
        <div class="alert alert-@TempData["BookApproveAlertType"] alert-dismissible fade show mt-3" role="alert">
            @TempData["BookApproveMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <table class="table table-bordered table-hover shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>Mã Phiếu Mượn</th>
                <th>Người Mượn</th>
                <th>Tên Sách</th>
                <th>Ngày Mượn</th>
                <th>Hạn Trả</th>
                <th>Trạng Thái</th>
                <th>Hành Động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var borrow in Model)
            {
                <tr>
                    <td class="align-middle text-center">@borrow.BorrowID</td>
                    <td class="align-middle">@borrow.Username</td>
                    <td class="align-middle">@borrow.Title</td>
                    <td class="align-middle">@borrow.BorrowDate.ToString("dd/MM/yyyy")</td>
                    <td class="align-middle">@borrow.ReturnDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center align-middle">
                        <span class="status-block @(borrow.Status == "Pending" ? "bg-warning text-dark" :
                               borrow.Status == "Approved" ? "bg-info text-dark" :
                               borrow.Status == "Returned" ? "bg-success text-dark" : "")">
                            @(borrow.Status)
                        </span>
                    </td>
                    <td class="text-center align-middle">
                        @if (borrow.Status == "Pending")
                        {
                            <form action="/BookBorrow/BookBorrowApprove" method="post" style="display: inline;" id="approveForm-@borrow.BorrowID">
                                <input type="hidden" name="borrowId" value="@borrow.BorrowID" />
                                <button type="button" class="btn btn-success custom-btn"
                                        data-bs-toggle="modal"
                                        data-bs-target="#confirmApproveModal"
                                        data-borrow-id="@borrow.BorrowID"
                                        data-book-title="@borrow.Title"
                                        data-username="@borrow.Username">
                                    <i class="bi bi-check-circle me-2"></i>Accept
                                </button>
                            </form>
                        }
                        @if (borrow.Status == "Returned")
                        {
                            <form action="/BookBorrow/BookBorrowDelete" method="post" style="display: inline;" id="deleteForm-@borrow.BorrowID">
                                <input type="hidden" name="borrowId" value="@borrow.BorrowID" />
                                <button type="button" class="btn btn-danger custom-btn ms-2"
                                        data-bs-toggle="modal"
                                        data-bs-target="#confirmDeleteModal"
                                        data-borrow-id="@borrow.BorrowID"
                                        data-book-title="@borrow.Title"
                                        data-username="@borrow.Username">
                                    <i class="bi bi-trash me-2"></i>Xóa
                                </button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Phân trang -->
    <div class="pagination-container">
        <div class="pagination-info">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("BookborrowDetails", new { page = 1, searchUsername = ViewBag.SearchUsername })">Đầu</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("BookborrowDetails", new { page = Model.PageNumber - 1, searchUsername = ViewBag.SearchUsername })">«</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Đầu</span>
                </li>
                <li class="page-item disabled">
                    <span class="page-link">«</span>
                </li>
            }

            @{
                int startPage = Math.Max(1, Model.PageNumber - 2);
                int endPage = Math.Min(Model.PageCount, Model.PageNumber + 2);
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("BookborrowDetails", new { page = i, searchUsername = ViewBag.SearchUsername })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("BookborrowDetails", new { page = Model.PageNumber + 1, searchUsername = ViewBag.SearchUsername })">»</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("BookborrowDetails", new { page = Model.PageCount, searchUsername = ViewBag.SearchUsername })">Cuối</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">»</span>
                </li>
                <li class="page-item disabled">
                    <span class="page-link">Cuối</span>
                </li>
            }
        </ul>
    </div>
    <br />
</div>

<style>
    .status-block {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: 500;
        min-width: 100px;
    }

    .custom-btn {
        min-width: 100px;
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
        flex-direction: column;
    }

    .pagination-info {
        margin-bottom: 10px;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .page-item {
        margin: 0 2px;
    }

    .page-link {
        padding: 6px 12px;
        border: 1px solid #dee2e6;
        color: #007bff;
        text-decoration: none;
        border-radius: 4px;
    }

    .page-item.active .page-link {
        background-color: #007bff;
        color: white;
        border-color: #007bff;
    }

    .page-item.disabled .page-link {
        color: #6c757d;
        pointer-events: none;
        background-color: #fff;
        border-color: #dee2e6;
    }
</style>

<!-- Modal xác nhận phê duyệt -->
<div class="modal fade" id="confirmApproveModal" tabindex="-1" aria-labelledby="confirmApproveModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmApproveModalLabel">Xác nhận phê duyệt mượn sách</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn phê duyệt yêu cầu mượn sách <strong id="modalBookTitle"></strong>
                cho người dùng <strong id="modalUsername"></strong> không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="confirmApproveBtn">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa phiếu mượn</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa phiếu mượn sách <strong id="modalDeleteBookTitle"></strong>
                của người dùng <strong id="modalDeleteUsername"></strong> không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<style>
    .custom-btn {
        padding: 10px 20px;
        border-radius: 25px;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }

        .custom-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.3);
        }

    .status-block {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 500;
        color: white;
        background-color: rgba(0,0,0,0.2);
        transition: all 0.3s ease;
    }

        .status-block:hover {
            background-color: rgba(0,0,0,0.4);
        }

    .table-hover tbody tr:hover {
        background-color: #f5f5f5;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
    }
</style>

<script>
    // Xử lý khi mở modal
    document.querySelectorAll('[data-bs-target="#confirmApproveModal"]').forEach(button => {
        button.addEventListener('click', function () {
            const borrowId = this.getAttribute('data-borrow-id');
            const bookTitle = this.getAttribute('data-book-title');
            const username = this.getAttribute('data-username');

            document.getElementById('modalBookTitle').textContent = bookTitle;
            document.getElementById('modalUsername').textContent = username;
            document.getElementById('confirmApproveBtn').setAttribute('data-borrow-id', borrowId);
        });
    });

    // Xử lý khi nhấn nút Xác nhận trong modal
    document.getElementById('confirmApproveBtn').addEventListener('click', function () {
        const borrowId = this.getAttribute('data-borrow-id');
        const form = document.getElementById(`approveForm-${borrowId}`);
        if (form) {
            form.submit();
        }
    });

    // Xử lý modal Delete
    document.querySelectorAll('[data-bs-target="#confirmDeleteModal"]').forEach(button => {
        button.addEventListener('click', function () {
            const borrowId = this.getAttribute('data-borrow-id');
            const bookTitle = this.getAttribute('data-book-title');
            const username = this.getAttribute('data-username');

            document.getElementById('modalDeleteBookTitle').textContent = bookTitle;
            document.getElementById('modalDeleteUsername').textContent = username;
            document.getElementById('confirmDeleteBtn').setAttribute('data-borrow-id', borrowId);
        });
    });

    document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
        const borrowId = this.getAttribute('data-borrow-id');
        const form = document.getElementById(`deleteForm-${borrowId}`);
        if (form) {
            form.submit();
        }
    });
</script>